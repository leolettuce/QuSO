// Define binary variables (x_ij) and hardcoded combinations
parameterNames := {"x_12", "x_13", "x_14", "x_23", "x_24", "x_34"};
combinations := {
  "000000", "000001", "000010", "000011",
  "000100", "000101", "000110", "000111",
  "001000", "001001", "001010", "001011",
  "001100", "001101", "001110", "001111",
  "010000", "010001", "010010", "010011",
  "010100", "010101", "010110", "010111",
  "011000", "011001", "011010", "011011",
  "011100", "011101", "011110", "011111",
  "100000", "100001", "100010", "100011",
  "100100", "100101", "100110", "100111",
  "101000", "101001", "101010", "101011",
  "101100", "101101", "101110", "101111",
  "110000", "110001", "110010", "110011",
  "110100", "110101", "110110", "110111",
  "111000", "111001", "111010", "111011",
  "111100", "111101", "111110", "111111"
};

print("OM_results = {");
// Iterate through hardcoded combinations
for i in 1:64 loop
  combination := combinations[i];

  // Load the model file
  loadFile("/Users/Q556220/Projects/QuSo_Cooling_System/Code/OpenModelica/final_configuration/cooling_system_models/cooling_system_"+combination+".mo");
  instantiateModel(cooling_system);
  simulate(cooling_system, stopTime=10, numberOfIntervals=5000);

  // Print the results
  print("  '"+combination+"': ["+String(val(Battery_1.T, timePoint=10))+", "+String(val(Engine_2.T, timePoint=10))+", "+String(val(Cooler_3.T, timePoint=10))+", "+String(val(Cooler_4.T, timePoint=10))+"],\n");
end for;
print("}");

// Print a completion message
print("Simulations completed.");
